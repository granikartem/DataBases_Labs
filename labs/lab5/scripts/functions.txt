create procedure planMission(myName varchar(64), myGoal text, myDescription text, experiments integer[], info_arr integer[][][])
as $$DECLARE
    experiment int;
    my_id int;
    index int = 1;
    i int = 1;
    len int;
    array2d int[][];
    orbit int;
    BEGIN
    insert into s295964.Mission(name, goal, status, description) values(myName, myGoal, 'PLANNED', myDescription) returning mission_id into my_id;
    foreach experiment in array experiments
    loop
        array2d = ARRAY(SELECT * FROM unnest(info_arr[index:index]));
        len = array_length(array2d, 1);
        while i < len
            loop
            if array2d[i + 1] = 0 then
                orbit = null;
            else
                orbit = array2d[i + 1];
            end if;
            insert into s295964.IntendedExperiments values(experiment, my_id, array2d[i], orbit);
            i = i + 2;
            end loop;
        index = index + 1;
        end loop;
end;
    $$language  plpgsql;

create procedure updateStatus(mission integer)
as $$BEGIN
    if (select bool_and(s295964.Production.status) from IntendedExperiments
        join Production on IntendedExperiments.equipment_id = Production.equipment_id
                                           where IntendedExperiments.mission_id = mission) then
            update Mission set status = 'READY FOR LAUNCH' where mission_id = mission;
        else
            raise notice 'Not all equipment has been produced';
    end if;
end;
    $$language  plpgsql;

